# -*- coding: utf-8 -*-
"""1 - NLP Practices for basic.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/180q6A3yaebiSyCDfaDZvWjhR3OxG0xGX

# Tokenization

**Tokenization :** Given a character sequence and a defined document unit
"""

#!pip install spacy

import spacy

"""## Solve the examples from the slides using spaCy"""

nlp = spacy.load('en_core_web_sm')

example1 = nlp("This is an example of text tokenization")

for token in example1:
    print(token.text)

example2 = nlp("The quick brown fox jumps over the lazy dog")

for token in example2:
    print(token.text)

example3 = nlp("We’re the champions")

for token in example3:
    print(token.text)

example4 = nlp("Will we have dinner today?")

for token in example4:
    print(token.text)

"""# Stemming

**Stemming**

## Solving the Stemming examples from the slides using NLTK
## More examples added in this notebook
### You can install NLTK from https://www.nltk.org/install.html
"""

!pip install nltk

from nltk.stem import PorterStemmer

stemmer = PorterStemmer()

example = "Cats Running Was"
example = [stemmer.stem(token) for token in example.split(" ")]
print(" ".join(example))

lyrics = "You better lose yourself in the music, the moment "\
+ "You own it, you better never let it go "\
+ "You only get one shot, do not miss your chance to blow "\
+ "This opportunity comes once in a lifetime "
lyrics = [stemmer.stem(token) for token in lyrics.split(" ")]
print(" ".join(lyrics))

review = "Bromwell High is a cartoon comedy. "\
+ "It ran at the same time as some other programs about school life, such as \"Teachers\". "\
+ "My 35 years in the teaching profession lead me to believe that Bromwell High's satire is much "\
+ "closer to reality than is \"Teachers\". The scramble to survive financially, the insightful "\
+ "students who can see right through their pathetic teachers' pomp, the pettiness of the whole situation "\
+ ", all remind me of the schools I knew and their students. When I saw the episode in which a student "\
+ "repeatedly tried to burn down the school, I immediately recalled ......... at .......... High. "\
+ "A classic line: INSPECTOR: I'm here to sack one of your teachers. STUDENT: Welcome to Bromwell High. "\
+ "I expect that many adults of my age think that Bromwell High is far fetched. What a pity that it isn't!"

review= [stemmer.stem(token) for token in review.split(" ")]
print(" ".join(review))

"""# Lemmatization

## In this notebook we solve the examples from the slides using spaCy.
"""

import spacy

nlp = spacy.load('en_core_web_sm')

example1 = nlp("Animals")
for token in example1:
    print(token.lemma_)

example2 = nlp("is am are")
for token in example2:
    print(token.lemma_)

lyrics = "You better lose yourself in the music, the moment "\
+ "You own it, you better never let it go " \
+ "You only get one shot, do not miss your chance to blow "\
+ "This opportunity comes once in a lifetime"

example3 = nlp(lyrics)

for token in example3:
    print(token.lemma_)

"""# Vectorization
## In this notebook we solve the examples in the slides and more using scikit-learn
## You can install scikit-learn from: http://scikit-learn.org/stable/install.html
"""

from sklearn.feature_extraction.text import CountVectorizer

vectorizer = CountVectorizer(binary=True, token_pattern=r'\b[^\d\W]+\b')

corpus = ["The dog is on the table", "the cats now are on the table"]
vectorizer.fit(corpus)
print(vectorizer.transform(["The dog is on the table"]).toarray())

vocab = vectorizer.vocabulary_

for key in sorted(vocab.keys()):
    print("{}: {}".format(key, vocab[key]))

corpus2 = ["I am jack", "You are john", "I am john"]
vectorizer.fit(corpus2)

print(vectorizer.transform(corpus2).toarray())

vocab = vectorizer.vocabulary_

for key in sorted(vocab.keys()):
    print("{}: {}".format(key, vocab[key]))

"""# Word2vec
## In this notebook we will play with spaCy's word vectors
"""

import spacy

#nlp = spacy.load('en_core_web_lg')
nlp = spacy.load('en_core_web_sm')

example1 = "man woman king queen"
tokens = nlp(example1)
for token1 in tokens:
    for token2 in tokens:
        print(token1.text, token2.text, token1.similarity(token2))

example1 = "walking walked swimming swam"
tokens = nlp(example1)
for token1 in tokens:
    for token2 in tokens:
        if(token1.text == token2.text):
            continue
        print(token1.text, token2.text, token1.similarity(token2))

example1 = "spain russia madrid moscow"
tokens = nlp(example1)
for token1 in tokens:
    for token2 in tokens:
        if(token1.text == token2.text):
            continue
        print(token1.text, token2.text, token1.similarity(token2))

example1 = "cat dog"
tokens = nlp(example1)
for token1 in tokens:
    for token2 in tokens:
        if(token1.text == token2.text):
            continue        
        print(token1.text, token2.text, token1.similarity(token2))

example1 = "cat pizza"
tokens = nlp(example1)
for token1 in tokens:
    for token2 in tokens:
        if(token1.text == token2.text):
            continue        
        print(token1.text, token2.text, token1.similarity(token2))

example1 = "flower pasta"
tokens = nlp(example1)
for token1 in tokens:
    for token2 in tokens:
        if(token1.text == token2.text):
            continue        
        print(token1.text, token2.text, token1.similarity(token2))

"""# Named Entity Recognition
## In this notebook we will explore spaCy's abilities at detecting named entities.
"""

import spacy

nlp = spacy.load('en_core_web_sm')

example = "Google, a company founded by Larry Page and Sergey Brin in the United States of America "\
+ "has one of the world’s most advanced search engines."

doc = nlp(example)

for ent in doc.ents:
    print(ent.text, ent.label_)

example = "The company's rapid growth since incorporation has triggered a chain of products, acquisitions, and partnerships beyond Google's core search engine (Google Search). It offers services designed for work and productivity (Google Docs, Google Sheets, and Google Slides), email (Gmail), scheduling and time management (Google Calendar), cloud storage (Google Drive), instant messaging and video chat (Duo, Hangouts), language translation (Google Translate), mapping and navigation (Google Maps, Waze, Google Earth, Street View), video sharing (YouTube), note-taking (Google Keep), and photo organizing and editing (Google Photos). The company leads the development of the Android mobile operating system, the Google Chrome web browser, and Chrome OS, a lightweight operating system based on the Chrome browser. Google has moved increasingly into hardware; from 2010 to 2015, it partnered with major electronics manufacturers in the production of its Nexus devices, and it released multiple hardware products in October 2016, including the Google Pixel smartphone"
doc = nlp(example)

for ent in doc.ents:
    print(ent.text, ent.label_)

example = "Google, a company founded by Larry Page and Sergey Brin in the United States of America "\
+ "has one of the world’s most advanced search engines."

doc = nlp(example)

for ent in doc.ents:
    print(ent.text, ent.label_)

example = "U.S. officials are meeting with former Taliban members "\
+ "amid intensifying efforts to wind down America's longest war, three of the "\
+ "militant group's commanders told NBC News."

doc = nlp(example)

for ent in doc.ents:
    print(ent.text, ent.label_)

example = "It’s been an arduous year for German chancellor Angela Merkel, so far. "\
+ "She has battled through coalition negotiations to form a government, chivvied "\
+ "the European Union into a loose agreement on migrants, weathered insults from "\
+ "US president Donald Trump, and headed off a revolt from her interior minister. No wonder "\
+ "then one journalist at her summer news conference in Berlin today (July 20) asked if "\
+ "she was, honestly, just exhausted. “I can’t complain,” Merkel said, “I have a few days "\
+ "holiday now and am looking forward to sleeping a bit longer.”"

doc = nlp(example)

for ent in doc.ents:
    print(ent.text, ent.label_)